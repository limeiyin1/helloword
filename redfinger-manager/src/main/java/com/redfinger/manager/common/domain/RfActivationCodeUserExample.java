package com.redfinger.manager.common.domain;

import java.util.ArrayList;
import java.util.List;

public class RfActivationCodeUserExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	public RfActivationCodeUserExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andCodeUserIdIsNull() {
			addCriterion("code_user_id is null");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdIsNotNull() {
			addCriterion("code_user_id is not null");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdEqualTo(Integer value) {
			addCriterion("code_user_id =", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdNotEqualTo(Integer value) {
			addCriterion("code_user_id <>", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdGreaterThan(Integer value) {
			addCriterion("code_user_id >", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("code_user_id >=", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdLessThan(Integer value) {
			addCriterion("code_user_id <", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdLessThanOrEqualTo(Integer value) {
			addCriterion("code_user_id <=", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdIn(List<Integer> values) {
			addCriterion("code_user_id in", values, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdNotIn(List<Integer> values) {
			addCriterion("code_user_id not in", values, "codeUserId");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andCodeUserIdBetween(Integer value1, Integer value2) {
			addCriterion("code_user_id between", value1, value2, "codeUserId");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andCodeUserIdNotBetween(Integer value1, Integer value2) {
			addCriterion("code_user_id not between", value1, value2, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeIdIsNull() {
			addCriterion("code_id is null");
			return (Criteria) this;
		}

		public Criteria andCodeIdIsNotNull() {
			addCriterion("code_id is not null");
			return (Criteria) this;
		}

		public Criteria andCodeIdEqualTo(Integer value) {
			addCriterion("code_id =", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andCodeIdNotEqualTo(Integer value) {
			addCriterion("code_id <>", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andCodeIdGreaterThan(Integer value) {
			addCriterion("code_id >", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andCodeIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("code_id >=", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andCodeIdLessThan(Integer value) {
			addCriterion("code_id <", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andCodeIdLessThanOrEqualTo(Integer value) {
			addCriterion("code_id <=", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andCodeIdIn(List<Integer> values) {
			addCriterion("code_id in", values, "codeId");
			return (Criteria) this;
		}

		public Criteria andCodeIdNotIn(List<Integer> values) {
			addCriterion("code_id not in", values, "codeId");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andCodeIdBetween(Integer value1, Integer value2) {
			addCriterion("code_id between", value1, value2, "codeId");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andCodeIdNotBetween(Integer value1, Integer value2) {
			addCriterion("code_id not between", value1, value2, "codeId");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(Integer value) {
			addCriterion("user_id =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(Integer value) {
			addCriterion("user_id <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(Integer value) {
			addCriterion("user_id >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("user_id >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(Integer value) {
			addCriterion("user_id <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Integer value) {
			addCriterion("user_id <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<Integer> values) {
			addCriterion("user_id in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<Integer> values) {
			addCriterion("user_id not in", values, "userId");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andUserIdBetween(Integer value1, Integer value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andUserIdNotBetween(Integer value1, Integer value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andTypeIdIsNull() {
			addCriterion("type_id is null");
			return (Criteria) this;
		}

		public Criteria andTypeIdIsNotNull() {
			addCriterion("type_id is not null");
			return (Criteria) this;
		}

		public Criteria andTypeIdEqualTo(Integer value) {
			addCriterion("type_id =", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andTypeIdNotEqualTo(Integer value) {
			addCriterion("type_id <>", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andTypeIdGreaterThan(Integer value) {
			addCriterion("type_id >", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andTypeIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("type_id >=", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andTypeIdLessThan(Integer value) {
			addCriterion("type_id <", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andTypeIdLessThanOrEqualTo(Integer value) {
			addCriterion("type_id <=", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andTypeIdIn(List<Integer> values) {
			addCriterion("type_id in", values, "typeId");
			return (Criteria) this;
		}

		public Criteria andTypeIdNotIn(List<Integer> values) {
			addCriterion("type_id not in", values, "typeId");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andTypeIdBetween(Integer value1, Integer value2) {
			addCriterion("type_id between", value1, value2, "typeId");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andTypeIdNotBetween(Integer value1, Integer value2) {
			addCriterion("type_id not between", value1, value2, "typeId");
			return (Criteria) this;
		}

		public Criteria andActivationNumberIsNull() {
			addCriterion("activation_number is null");
			return (Criteria) this;
		}

		public Criteria andActivationNumberIsNotNull() {
			addCriterion("activation_number is not null");
			return (Criteria) this;
		}

		public Criteria andActivationNumberEqualTo(Integer value) {
			addCriterion("activation_number =", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andActivationNumberNotEqualTo(Integer value) {
			addCriterion("activation_number <>", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andActivationNumberGreaterThan(Integer value) {
			addCriterion("activation_number >", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andActivationNumberGreaterThanOrEqualTo(Integer value) {
			addCriterion("activation_number >=", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andActivationNumberLessThan(Integer value) {
			addCriterion("activation_number <", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andActivationNumberLessThanOrEqualTo(Integer value) {
			addCriterion("activation_number <=", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andActivationNumberIn(List<Integer> values) {
			addCriterion("activation_number in", values, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andActivationNumberNotIn(List<Integer> values) {
			addCriterion("activation_number not in", values, "activationNumber");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andActivationNumberBetween(Integer value1, Integer value2) {
			addCriterion("activation_number between", value1, value2, "activationNumber");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andActivationNumberNotBetween(Integer value1, Integer value2) {
			addCriterion("activation_number not between", value1, value2, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andPadIdIsNull() {
			addCriterion("pad_id is null");
			return (Criteria) this;
		}

		public Criteria andPadIdIsNotNull() {
			addCriterion("pad_id is not null");
			return (Criteria) this;
		}

		public Criteria andPadIdEqualTo(Integer value) {
			addCriterion("pad_id =", value, "padId");
			return (Criteria) this;
		}

		public Criteria andPadIdNotEqualTo(Integer value) {
			addCriterion("pad_id <>", value, "padId");
			return (Criteria) this;
		}

		public Criteria andPadIdGreaterThan(Integer value) {
			addCriterion("pad_id >", value, "padId");
			return (Criteria) this;
		}

		public Criteria andPadIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("pad_id >=", value, "padId");
			return (Criteria) this;
		}

		public Criteria andPadIdLessThan(Integer value) {
			addCriterion("pad_id <", value, "padId");
			return (Criteria) this;
		}

		public Criteria andPadIdLessThanOrEqualTo(Integer value) {
			addCriterion("pad_id <=", value, "padId");
			return (Criteria) this;
		}

		public Criteria andPadIdIn(List<Integer> values) {
			addCriterion("pad_id in", values, "padId");
			return (Criteria) this;
		}

		public Criteria andPadIdNotIn(List<Integer> values) {
			addCriterion("pad_id not in", values, "padId");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andPadIdBetween(Integer value1, Integer value2) {
			addCriterion("pad_id between", value1, value2, "padId");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andPadIdNotBetween(Integer value1, Integer value2) {
			addCriterion("pad_id not between", value1, value2, "padId");
			return (Criteria) this;
		}

		protected void addCriterionIgnoreNull(String condition, Object value, String property) {
			if (value != null) {
				if (value instanceof String) {
					if (((String) value).length() > 0) {
						criteria.add(new Criterion(condition, value));
					}
				} else if (value instanceof List<?>) {
					if (((List<?>) value).size() > 0) {
						criteria.add(new Criterion(condition, value));
					}
				} else {
					criteria.add(new Criterion(condition, value));
				}
			}
		}

		public Criteria andCodeUserIdEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("code_user_id =", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeIdEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("code_id =", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("user_id =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andTypeIdEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("type_id =", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andActivationNumberEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("activation_number =", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andPadIdEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("pad_id =", value, "padId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdNotEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("code_user_id <>", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeIdNotEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("code_id <>", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("user_id <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andTypeIdNotEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("type_id <>", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andActivationNumberNotEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("activation_number <>", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andPadIdNotEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("pad_id <>", value, "padId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdGreaterThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("code_user_id >", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeIdGreaterThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("code_id >", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("user_id >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andTypeIdGreaterThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("type_id >", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andActivationNumberGreaterThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("activation_number >", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andPadIdGreaterThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("pad_id >", value, "padId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdGreaterThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("code_user_id >=", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeIdGreaterThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("code_id >=", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("user_id >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andTypeIdGreaterThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("type_id >=", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andActivationNumberGreaterThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("activation_number >=", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andPadIdGreaterThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("pad_id >=", value, "padId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdLessThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("code_user_id <", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeIdLessThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("code_id <", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("user_id <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andTypeIdLessThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("type_id <", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andActivationNumberLessThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("activation_number <", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andPadIdLessThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("pad_id <", value, "padId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdLessThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("code_user_id <=", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeIdLessThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("code_id <=", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("user_id <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andTypeIdLessThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("type_id <=", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andActivationNumberLessThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("activation_number <=", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andPadIdLessThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("pad_id <=", value, "padId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("code_user_id in", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeIdInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("code_id in", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andUserIdInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("user_id in", value, "userId");
			return (Criteria) this;
		}

		public Criteria andTypeIdInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("type_id in", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andActivationNumberInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("activation_number in", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andPadIdInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("pad_id in", value, "padId");
			return (Criteria) this;
		}

		public Criteria andCodeUserIdNotInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("code_user_id not in", value, "codeUserId");
			return (Criteria) this;
		}

		public Criteria andCodeIdNotInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("code_id not in", value, "codeId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("user_id not in", value, "userId");
			return (Criteria) this;
		}

		public Criteria andTypeIdNotInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("type_id not in", value, "typeId");
			return (Criteria) this;
		}

		public Criteria andActivationNumberNotInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("activation_number not in", value, "activationNumber");
			return (Criteria) this;
		}

		public Criteria andPadIdNotInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("pad_id not in", value, "padId");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table rf_activation_code_user
	 * @mbggenerated  Tue Jun 28 10:23:42 CST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rf_activation_code_user
     *
     * @mbggenerated do_not_delete_during_merge Mon Jun 27 16:37:31 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}