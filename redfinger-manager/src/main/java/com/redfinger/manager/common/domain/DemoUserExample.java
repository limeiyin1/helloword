package com.redfinger.manager.common.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class DemoUserExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public DemoUserExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andUserNameIsNull() {
			addCriterion("user_name is null");
			return (Criteria) this;
		}

		public Criteria andUserNameIsNotNull() {
			addCriterion("user_name is not null");
			return (Criteria) this;
		}

		public Criteria andUserNameEqualTo(String value) {
			addCriterion("user_name =", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameNotEqualTo(String value) {
			addCriterion("user_name <>", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameGreaterThan(String value) {
			addCriterion("user_name >", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameGreaterThanOrEqualTo(String value) {
			addCriterion("user_name >=", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameLessThan(String value) {
			addCriterion("user_name <", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameLessThanOrEqualTo(String value) {
			addCriterion("user_name <=", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameLike(String value) {
			addCriterion("user_name like", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameNotLike(String value) {
			addCriterion("user_name not like", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameIn(List<String> values) {
			addCriterion("user_name in", values, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameNotIn(List<String> values) {
			addCriterion("user_name not in", values, "userName");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andUserNameBetween(String value1, String value2) {
			addCriterion("user_name between", value1, value2, "userName");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andUserNameNotBetween(String value1, String value2) {
			addCriterion("user_name not between", value1, value2, "userName");
			return (Criteria) this;
		}

		public Criteria andLoginNameIsNull() {
			addCriterion("login_name is null");
			return (Criteria) this;
		}

		public Criteria andLoginNameIsNotNull() {
			addCriterion("login_name is not null");
			return (Criteria) this;
		}

		public Criteria andLoginNameEqualTo(String value) {
			addCriterion("login_name =", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameNotEqualTo(String value) {
			addCriterion("login_name <>", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameGreaterThan(String value) {
			addCriterion("login_name >", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameGreaterThanOrEqualTo(String value) {
			addCriterion("login_name >=", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameLessThan(String value) {
			addCriterion("login_name <", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameLessThanOrEqualTo(String value) {
			addCriterion("login_name <=", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameLike(String value) {
			addCriterion("login_name like", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameNotLike(String value) {
			addCriterion("login_name not like", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameIn(List<String> values) {
			addCriterion("login_name in", values, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameNotIn(List<String> values) {
			addCriterion("login_name not in", values, "loginName");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andLoginNameBetween(String value1, String value2) {
			addCriterion("login_name between", value1, value2, "loginName");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andLoginNameNotBetween(String value1, String value2) {
			addCriterion("login_name not between", value1, value2, "loginName");
			return (Criteria) this;
		}

		public Criteria andUserAgeIsNull() {
			addCriterion("user_age is null");
			return (Criteria) this;
		}

		public Criteria andUserAgeIsNotNull() {
			addCriterion("user_age is not null");
			return (Criteria) this;
		}

		public Criteria andUserAgeEqualTo(Integer value) {
			addCriterion("user_age =", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andUserAgeNotEqualTo(Integer value) {
			addCriterion("user_age <>", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andUserAgeGreaterThan(Integer value) {
			addCriterion("user_age >", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andUserAgeGreaterThanOrEqualTo(Integer value) {
			addCriterion("user_age >=", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andUserAgeLessThan(Integer value) {
			addCriterion("user_age <", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andUserAgeLessThanOrEqualTo(Integer value) {
			addCriterion("user_age <=", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andUserAgeIn(List<Integer> values) {
			addCriterion("user_age in", values, "userAge");
			return (Criteria) this;
		}

		public Criteria andUserAgeNotIn(List<Integer> values) {
			addCriterion("user_age not in", values, "userAge");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andUserAgeBetween(Integer value1, Integer value2) {
			addCriterion("user_age between", value1, value2, "userAge");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andUserAgeNotBetween(Integer value1, Integer value2) {
			addCriterion("user_age not between", value1, value2, "userAge");
			return (Criteria) this;
		}

		public Criteria andLoginTimeIsNull() {
			addCriterion("login_time is null");
			return (Criteria) this;
		}

		public Criteria andLoginTimeIsNotNull() {
			addCriterion("login_time is not null");
			return (Criteria) this;
		}

		public Criteria andLoginTimeEqualTo(Date value) {
			addCriterion("login_time =", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andLoginTimeNotEqualTo(Date value) {
			addCriterion("login_time <>", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andLoginTimeGreaterThan(Date value) {
			addCriterion("login_time >", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andLoginTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("login_time >=", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andLoginTimeLessThan(Date value) {
			addCriterion("login_time <", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andLoginTimeLessThanOrEqualTo(Date value) {
			addCriterion("login_time <=", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andLoginTimeIn(List<Date> values) {
			addCriterion("login_time in", values, "loginTime");
			return (Criteria) this;
		}

		public Criteria andLoginTimeNotIn(List<Date> values) {
			addCriterion("login_time not in", values, "loginTime");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andLoginTimeBetween(Date value1, Date value2) {
			addCriterion("login_time between", value1, value2, "loginTime");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andLoginTimeNotBetween(Date value1, Date value2) {
			addCriterion("login_time not between", value1, value2, "loginTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeIsNull() {
			addCriterion("register_time is null");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeIsNotNull() {
			addCriterion("register_time is not null");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeEqualTo(Date value) {
			addCriterion("register_time =", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeNotEqualTo(Date value) {
			addCriterion("register_time <>", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeGreaterThan(Date value) {
			addCriterion("register_time >", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("register_time >=", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeLessThan(Date value) {
			addCriterion("register_time <", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeLessThanOrEqualTo(Date value) {
			addCriterion("register_time <=", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeIn(List<Date> values) {
			addCriterion("register_time in", values, "registerTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeNotIn(List<Date> values) {
			addCriterion("register_time not in", values, "registerTime");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andRegisterTimeBetween(Date value1, Date value2) {
			addCriterion("register_time between", value1, value2, "registerTime");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andRegisterTimeNotBetween(Date value1, Date value2) {
			addCriterion("register_time not between", value1, value2, "registerTime");
			return (Criteria) this;
		}

		public Criteria andAccountIsNull() {
			addCriterion("account is null");
			return (Criteria) this;
		}

		public Criteria andAccountIsNotNull() {
			addCriterion("account is not null");
			return (Criteria) this;
		}

		public Criteria andAccountEqualTo(Integer value) {
			addCriterion("account =", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountNotEqualTo(Integer value) {
			addCriterion("account <>", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountGreaterThan(Integer value) {
			addCriterion("account >", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountGreaterThanOrEqualTo(Integer value) {
			addCriterion("account >=", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountLessThan(Integer value) {
			addCriterion("account <", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountLessThanOrEqualTo(Integer value) {
			addCriterion("account <=", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountIn(List<Integer> values) {
			addCriterion("account in", values, "account");
			return (Criteria) this;
		}

		public Criteria andAccountNotIn(List<Integer> values) {
			addCriterion("account not in", values, "account");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andAccountBetween(Integer value1, Integer value2) {
			addCriterion("account between", value1, value2, "account");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andAccountNotBetween(Integer value1, Integer value2) {
			addCriterion("account not between", value1, value2, "account");
			return (Criteria) this;
		}

		protected void addCriterionIgnoreNull(String condition, Object value, String property) {
			if (value != null) {
				if (value instanceof String) {
					if (((String) value).length() > 0) {
						criteria.add(new Criterion(condition, value));
					}
				} else if (value instanceof List<?>) {
					if (((List<?>) value).size() > 0) {
						criteria.add(new Criterion(condition, value));
					}
				} else {
					criteria.add(new Criterion(condition, value));
				}
			}
		}

		public Criteria andIdEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andUserNameEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("user_name =", value, "userName");
			return (Criteria) this;
		}

		public Criteria andLoginNameEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("login_name =", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andUserAgeEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("user_age =", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andLoginTimeEqualToIgnoreNull(Date value) {
			addCriterionIgnoreNull("login_time =", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeEqualToIgnoreNull(Date value) {
			addCriterionIgnoreNull("register_time =", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andAccountEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("account =", value, "account");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andUserNameNotEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("user_name <>", value, "userName");
			return (Criteria) this;
		}

		public Criteria andLoginNameNotEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("login_name <>", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andUserAgeNotEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("user_age <>", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andLoginTimeNotEqualToIgnoreNull(Date value) {
			addCriterionIgnoreNull("login_time <>", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeNotEqualToIgnoreNull(Date value) {
			addCriterionIgnoreNull("register_time <>", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andAccountNotEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("account <>", value, "account");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andUserNameGreaterThanIgnoreNull(String value) {
			addCriterionIgnoreNull("user_name >", value, "userName");
			return (Criteria) this;
		}

		public Criteria andLoginNameGreaterThanIgnoreNull(String value) {
			addCriterionIgnoreNull("login_name >", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andUserAgeGreaterThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("user_age >", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andLoginTimeGreaterThanIgnoreNull(Date value) {
			addCriterionIgnoreNull("login_time >", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeGreaterThanIgnoreNull(Date value) {
			addCriterionIgnoreNull("register_time >", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andAccountGreaterThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("account >", value, "account");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andUserNameGreaterThanOrEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("user_name >=", value, "userName");
			return (Criteria) this;
		}

		public Criteria andLoginNameGreaterThanOrEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("login_name >=", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andUserAgeGreaterThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("user_age >=", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andLoginTimeGreaterThanOrEqualToIgnoreNull(Date value) {
			addCriterionIgnoreNull("login_time >=", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeGreaterThanOrEqualToIgnoreNull(Date value) {
			addCriterionIgnoreNull("register_time >=", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andAccountGreaterThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("account >=", value, "account");
			return (Criteria) this;
		}

		public Criteria andIdLessThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andUserNameLessThanIgnoreNull(String value) {
			addCriterionIgnoreNull("user_name <", value, "userName");
			return (Criteria) this;
		}

		public Criteria andLoginNameLessThanIgnoreNull(String value) {
			addCriterionIgnoreNull("login_name <", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andUserAgeLessThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("user_age <", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andLoginTimeLessThanIgnoreNull(Date value) {
			addCriterionIgnoreNull("login_time <", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeLessThanIgnoreNull(Date value) {
			addCriterionIgnoreNull("register_time <", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andAccountLessThanIgnoreNull(Integer value) {
			addCriterionIgnoreNull("account <", value, "account");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andUserNameLessThanOrEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("user_name <=", value, "userName");
			return (Criteria) this;
		}

		public Criteria andLoginNameLessThanOrEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("login_name <=", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andUserAgeLessThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("user_age <=", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andLoginTimeLessThanOrEqualToIgnoreNull(Date value) {
			addCriterionIgnoreNull("login_time <=", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeLessThanOrEqualToIgnoreNull(Date value) {
			addCriterionIgnoreNull("register_time <=", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andAccountLessThanOrEqualToIgnoreNull(Integer value) {
			addCriterionIgnoreNull("account <=", value, "account");
			return (Criteria) this;
		}

		public Criteria andIdInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("id in", value, "id");
			return (Criteria) this;
		}

		public Criteria andUserNameInIgnoreNull(List<String> value) {
			addCriterionIgnoreNull("user_name in", value, "userName");
			return (Criteria) this;
		}

		public Criteria andLoginNameInIgnoreNull(List<String> value) {
			addCriterionIgnoreNull("login_name in", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andUserAgeInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("user_age in", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andLoginTimeInIgnoreNull(List<Date> value) {
			addCriterionIgnoreNull("login_time in", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeInIgnoreNull(List<Date> value) {
			addCriterionIgnoreNull("register_time in", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andAccountInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("account in", value, "account");
			return (Criteria) this;
		}

		public Criteria andIdNotInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("id not in", value, "id");
			return (Criteria) this;
		}

		public Criteria andUserNameNotInIgnoreNull(List<String> value) {
			addCriterionIgnoreNull("user_name not in", value, "userName");
			return (Criteria) this;
		}

		public Criteria andLoginNameNotInIgnoreNull(List<String> value) {
			addCriterionIgnoreNull("login_name not in", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andUserAgeNotInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("user_age not in", value, "userAge");
			return (Criteria) this;
		}

		public Criteria andLoginTimeNotInIgnoreNull(List<Date> value) {
			addCriterionIgnoreNull("login_time not in", value, "loginTime");
			return (Criteria) this;
		}

		public Criteria andRegisterTimeNotInIgnoreNull(List<Date> value) {
			addCriterionIgnoreNull("register_time not in", value, "registerTime");
			return (Criteria) this;
		}

		public Criteria andAccountNotInIgnoreNull(List<Integer> value) {
			addCriterionIgnoreNull("account not in", value, "account");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table demo_user
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table demo_user
     *
     * @mbggenerated do_not_delete_during_merge Thu Dec 10 14:53:35 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }

        public Criteria andUserNameLikeInsensitive(String value) {
            addCriterion("upper(user_name) like", value.toUpperCase(), "userName");
            return this;
        }

        public Criteria andLoginNameLikeInsensitive(String value) {
            addCriterion("upper(login_name) like", value.toUpperCase(), "loginName");
            return this;
        }
    }
}