package com.redfinger.manager.common.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AssessContentListExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public AssessContentListExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeIsNull() {
            addCriterion("assess_time is null");
            return (Criteria) this;
        }

        public Criteria andAssessTimeIsNotNull() {
            addCriterion("assess_time is not null");
            return (Criteria) this;
        }

        public Criteria andAssessTimeEqualTo(Date value) {
            addCriterion("assess_time =", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeNotEqualTo(Date value) {
            addCriterion("assess_time <>", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeGreaterThan(Date value) {
            addCriterion("assess_time >", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("assess_time >=", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeLessThan(Date value) {
            addCriterion("assess_time <", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeLessThanOrEqualTo(Date value) {
            addCriterion("assess_time <=", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeIn(List<Date> values) {
            addCriterion("assess_time in", values, "assessTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeNotIn(List<Date> values) {
            addCriterion("assess_time not in", values, "assessTime");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andAssessTimeBetween(Date value1, Date value2) {
            addCriterion("assess_time between", value1, value2, "assessTime");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andAssessTimeNotBetween(Date value1, Date value2) {
            addCriterion("assess_time not between", value1, value2, "assessTime");
            return (Criteria) this;
        }

        public Criteria andPointIsNull() {
            addCriterion("point is null");
            return (Criteria) this;
        }

        public Criteria andPointIsNotNull() {
            addCriterion("point is not null");
            return (Criteria) this;
        }

        public Criteria andPointEqualTo(String value) {
            addCriterion("point =", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointNotEqualTo(String value) {
            addCriterion("point <>", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointGreaterThan(String value) {
            addCriterion("point >", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointGreaterThanOrEqualTo(String value) {
            addCriterion("point >=", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointLessThan(String value) {
            addCriterion("point <", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointLessThanOrEqualTo(String value) {
            addCriterion("point <=", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointLike(String value) {
            addCriterion("point like", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointNotLike(String value) {
            addCriterion("point not like", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointIn(List<String> values) {
            addCriterion("point in", values, "point");
            return (Criteria) this;
        }

        public Criteria andPointNotIn(List<String> values) {
            addCriterion("point not in", values, "point");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andPointBetween(String value1, String value2) {
            addCriterion("point between", value1, value2, "point");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andPointNotBetween(String value1, String value2) {
            addCriterion("point not between", value1, value2, "point");
            return (Criteria) this;
        }

        public Criteria andAssessAdminIsNull() {
            addCriterion("assess_admin is null");
            return (Criteria) this;
        }

        public Criteria andAssessAdminIsNotNull() {
            addCriterion("assess_admin is not null");
            return (Criteria) this;
        }

        public Criteria andAssessAdminEqualTo(String value) {
            addCriterion("assess_admin =", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andAssessAdminNotEqualTo(String value) {
            addCriterion("assess_admin <>", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andAssessAdminGreaterThan(String value) {
            addCriterion("assess_admin >", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andAssessAdminGreaterThanOrEqualTo(String value) {
            addCriterion("assess_admin >=", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andAssessAdminLessThan(String value) {
            addCriterion("assess_admin <", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andAssessAdminLessThanOrEqualTo(String value) {
            addCriterion("assess_admin <=", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andAssessAdminLike(String value) {
            addCriterion("assess_admin like", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andAssessAdminNotLike(String value) {
            addCriterion("assess_admin not like", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andAssessAdminIn(List<String> values) {
            addCriterion("assess_admin in", values, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andAssessAdminNotIn(List<String> values) {
            addCriterion("assess_admin not in", values, "assessAdmin");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andAssessAdminBetween(String value1, String value2) {
            addCriterion("assess_admin between", value1, value2, "assessAdmin");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andAssessAdminNotBetween(String value1, String value2) {
            addCriterion("assess_admin not between", value1, value2, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminIsNull() {
            addCriterion("target_admin is null");
            return (Criteria) this;
        }

        public Criteria andTargetAdminIsNotNull() {
            addCriterion("target_admin is not null");
            return (Criteria) this;
        }

        public Criteria andTargetAdminEqualTo(String value) {
            addCriterion("target_admin =", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminNotEqualTo(String value) {
            addCriterion("target_admin <>", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminGreaterThan(String value) {
            addCriterion("target_admin >", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminGreaterThanOrEqualTo(String value) {
            addCriterion("target_admin >=", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminLessThan(String value) {
            addCriterion("target_admin <", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminLessThanOrEqualTo(String value) {
            addCriterion("target_admin <=", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminLike(String value) {
            addCriterion("target_admin like", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminNotLike(String value) {
            addCriterion("target_admin not like", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminIn(List<String> values) {
            addCriterion("target_admin in", values, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminNotIn(List<String> values) {
            addCriterion("target_admin not in", values, "targetAdmin");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andTargetAdminBetween(String value1, String value2) {
            addCriterion("target_admin between", value1, value2, "targetAdmin");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andTargetAdminNotBetween(String value1, String value2) {
            addCriterion("target_admin not between", value1, value2, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdIsNull() {
            addCriterion("project_id is null");
            return (Criteria) this;
        }

        public Criteria andProjectIdIsNotNull() {
            addCriterion("project_id is not null");
            return (Criteria) this;
        }

        public Criteria andProjectIdEqualTo(Integer value) {
            addCriterion("project_id =", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotEqualTo(Integer value) {
            addCriterion("project_id <>", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThan(Integer value) {
            addCriterion("project_id >", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("project_id >=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThan(Integer value) {
            addCriterion("project_id <", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanOrEqualTo(Integer value) {
            addCriterion("project_id <=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdIn(List<Integer> values) {
            addCriterion("project_id in", values, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotIn(List<Integer> values) {
            addCriterion("project_id not in", values, "projectId");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andProjectIdBetween(Integer value1, Integer value2) {
            addCriterion("project_id between", value1, value2, "projectId");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andProjectIdNotBetween(Integer value1, Integer value2) {
            addCriterion("project_id not between", value1, value2, "projectId");
            return (Criteria) this;
        }

        public Criteria andAssessStatusIsNull() {
            addCriterion("assess_status is null");
            return (Criteria) this;
        }

        public Criteria andAssessStatusIsNotNull() {
            addCriterion("assess_status is not null");
            return (Criteria) this;
        }

        public Criteria andAssessStatusEqualTo(String value) {
            addCriterion("assess_status =", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andAssessStatusNotEqualTo(String value) {
            addCriterion("assess_status <>", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andAssessStatusGreaterThan(String value) {
            addCriterion("assess_status >", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andAssessStatusGreaterThanOrEqualTo(String value) {
            addCriterion("assess_status >=", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andAssessStatusLessThan(String value) {
            addCriterion("assess_status <", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andAssessStatusLessThanOrEqualTo(String value) {
            addCriterion("assess_status <=", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andAssessStatusLike(String value) {
            addCriterion("assess_status like", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andAssessStatusNotLike(String value) {
            addCriterion("assess_status not like", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andAssessStatusIn(List<String> values) {
            addCriterion("assess_status in", values, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andAssessStatusNotIn(List<String> values) {
            addCriterion("assess_status not in", values, "assessStatus");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andAssessStatusBetween(String value1, String value2) {
            addCriterion("assess_status between", value1, value2, "assessStatus");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andAssessStatusNotBetween(String value1, String value2) {
            addCriterion("assess_status not between", value1, value2, "assessStatus");
            return (Criteria) this;
        }

        protected void addCriterionIgnoreNull(String condition, Object value, String property) {
            if (value != null) {
                if (value instanceof String) {
                    if (((String) value).length() > 0) {
                        criteria.add(new Criterion(condition, value));
                    }
                } else if (value instanceof List<?>) {
                    if(((List<?>) value).size()>0){
                        criteria.add(new Criterion(condition, value));
                    }
                } else {
                    criteria.add(new Criterion(condition, value));
                }
            }
        }

        public Criteria andIdEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("assess_time =", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andPointEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("point =", value, "point");
            return (Criteria) this;
        }

        public Criteria andAssessAdminEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_admin =", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("target_admin =", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id =", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andAssessStatusEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_status =", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeNotEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("assess_time <>", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andPointNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("point <>", value, "point");
            return (Criteria) this;
        }

        public Criteria andAssessAdminNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_admin <>", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("target_admin <>", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id <>", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andAssessStatusNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_status <>", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeGreaterThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("assess_time >", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andPointGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("point >", value, "point");
            return (Criteria) this;
        }

        public Criteria andAssessAdminGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_admin >", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("target_admin >", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id >", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andAssessStatusGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_status >", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeGreaterThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("assess_time >=", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andPointGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("point >=", value, "point");
            return (Criteria) this;
        }

        public Criteria andAssessAdminGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_admin >=", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("target_admin >=", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id >=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andAssessStatusGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_status >=", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andIdLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeLessThanIgnoreNull(Date value) {
            addCriterionIgnoreNull("assess_time <", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andPointLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("point <", value, "point");
            return (Criteria) this;
        }

        public Criteria andAssessAdminLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_admin <", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("target_admin <", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id <", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andAssessStatusLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_status <", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeLessThanOrEqualToIgnoreNull(Date value) {
            addCriterionIgnoreNull("assess_time <=", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andPointLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("point <=", value, "point");
            return (Criteria) this;
        }

        public Criteria andAssessAdminLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_admin <=", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("target_admin <=", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id <=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andAssessStatusLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_status <=", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andIdInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("id in", value, "id");
            return (Criteria) this;
        }

        public Criteria andCreateTimeInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("create_time in", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("assess_time in", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andPointInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("point in", value, "point");
            return (Criteria) this;
        }

        public Criteria andAssessAdminInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("assess_admin in", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("target_admin in", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("project_id in", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andAssessStatusInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("assess_status in", value, "assessStatus");
            return (Criteria) this;
        }

        public Criteria andIdNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("id not in", value, "id");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("create_time not in", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andAssessTimeNotInIgnoreNull(List<Date> value) {
            addCriterionIgnoreNull("assess_time not in", value, "assessTime");
            return (Criteria) this;
        }

        public Criteria andPointNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("point not in", value, "point");
            return (Criteria) this;
        }

        public Criteria andAssessAdminNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("assess_admin not in", value, "assessAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("target_admin not in", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("project_id not in", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andAssessStatusNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("assess_status not in", value, "assessStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assess_content_list
     *
     * @mbggenerated do_not_delete_during_merge Wed Mar 23 14:42:45 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }

        public Criteria andPointLikeInsensitive(String value) {
            addCriterion("upper(point) like", value.toUpperCase(), "point");
            return this;
        }

        public Criteria andAssessAdminLikeInsensitive(String value) {
            addCriterion("upper(assess_admin) like", value.toUpperCase(), "assessAdmin");
            return this;
        }

        public Criteria andTargetAdminLikeInsensitive(String value) {
            addCriterion("upper(target_admin) like", value.toUpperCase(), "targetAdmin");
            return this;
        }

        public Criteria andAssessStatusLikeInsensitive(String value) {
            addCriterion("upper(assess_status) like", value.toUpperCase(), "assessStatus");
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assess_content_list
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}