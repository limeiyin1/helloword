package com.redfinger.manager.common.domain;

import java.util.ArrayList;
import java.util.List;

public class AssessContentDetailExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public AssessContentDetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPointIsNull() {
            addCriterion("point is null");
            return (Criteria) this;
        }

        public Criteria andPointIsNotNull() {
            addCriterion("point is not null");
            return (Criteria) this;
        }

        public Criteria andPointEqualTo(String value) {
            addCriterion("point =", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointNotEqualTo(String value) {
            addCriterion("point <>", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointGreaterThan(String value) {
            addCriterion("point >", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointGreaterThanOrEqualTo(String value) {
            addCriterion("point >=", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointLessThan(String value) {
            addCriterion("point <", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointLessThanOrEqualTo(String value) {
            addCriterion("point <=", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointLike(String value) {
            addCriterion("point like", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointNotLike(String value) {
            addCriterion("point not like", value, "point");
            return (Criteria) this;
        }

        public Criteria andPointIn(List<String> values) {
            addCriterion("point in", values, "point");
            return (Criteria) this;
        }

        public Criteria andPointNotIn(List<String> values) {
            addCriterion("point not in", values, "point");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andPointBetween(String value1, String value2) {
            addCriterion("point between", value1, value2, "point");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andPointNotBetween(String value1, String value2) {
            addCriterion("point not between", value1, value2, "point");
            return (Criteria) this;
        }

        public Criteria andProjectIdIsNull() {
            addCriterion("project_id is null");
            return (Criteria) this;
        }

        public Criteria andProjectIdIsNotNull() {
            addCriterion("project_id is not null");
            return (Criteria) this;
        }

        public Criteria andProjectIdEqualTo(Integer value) {
            addCriterion("project_id =", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotEqualTo(Integer value) {
            addCriterion("project_id <>", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThan(Integer value) {
            addCriterion("project_id >", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("project_id >=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThan(Integer value) {
            addCriterion("project_id <", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanOrEqualTo(Integer value) {
            addCriterion("project_id <=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdIn(List<Integer> values) {
            addCriterion("project_id in", values, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotIn(List<Integer> values) {
            addCriterion("project_id not in", values, "projectId");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andProjectIdBetween(Integer value1, Integer value2) {
            addCriterion("project_id between", value1, value2, "projectId");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andProjectIdNotBetween(Integer value1, Integer value2) {
            addCriterion("project_id not between", value1, value2, "projectId");
            return (Criteria) this;
        }

        public Criteria andOptionIdIsNull() {
            addCriterion("option_id is null");
            return (Criteria) this;
        }

        public Criteria andOptionIdIsNotNull() {
            addCriterion("option_id is not null");
            return (Criteria) this;
        }

        public Criteria andOptionIdEqualTo(Integer value) {
            addCriterion("option_id =", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andOptionIdNotEqualTo(Integer value) {
            addCriterion("option_id <>", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andOptionIdGreaterThan(Integer value) {
            addCriterion("option_id >", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andOptionIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("option_id >=", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andOptionIdLessThan(Integer value) {
            addCriterion("option_id <", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andOptionIdLessThanOrEqualTo(Integer value) {
            addCriterion("option_id <=", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andOptionIdIn(List<Integer> values) {
            addCriterion("option_id in", values, "optionId");
            return (Criteria) this;
        }

        public Criteria andOptionIdNotIn(List<Integer> values) {
            addCriterion("option_id not in", values, "optionId");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andOptionIdBetween(Integer value1, Integer value2) {
            addCriterion("option_id between", value1, value2, "optionId");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andOptionIdNotBetween(Integer value1, Integer value2) {
            addCriterion("option_id not between", value1, value2, "optionId");
            return (Criteria) this;
        }

        public Criteria andListIdIsNull() {
            addCriterion("list_id is null");
            return (Criteria) this;
        }

        public Criteria andListIdIsNotNull() {
            addCriterion("list_id is not null");
            return (Criteria) this;
        }

        public Criteria andListIdEqualTo(Integer value) {
            addCriterion("list_id =", value, "listId");
            return (Criteria) this;
        }

        public Criteria andListIdNotEqualTo(Integer value) {
            addCriterion("list_id <>", value, "listId");
            return (Criteria) this;
        }

        public Criteria andListIdGreaterThan(Integer value) {
            addCriterion("list_id >", value, "listId");
            return (Criteria) this;
        }

        public Criteria andListIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("list_id >=", value, "listId");
            return (Criteria) this;
        }

        public Criteria andListIdLessThan(Integer value) {
            addCriterion("list_id <", value, "listId");
            return (Criteria) this;
        }

        public Criteria andListIdLessThanOrEqualTo(Integer value) {
            addCriterion("list_id <=", value, "listId");
            return (Criteria) this;
        }

        public Criteria andListIdIn(List<Integer> values) {
            addCriterion("list_id in", values, "listId");
            return (Criteria) this;
        }

        public Criteria andListIdNotIn(List<Integer> values) {
            addCriterion("list_id not in", values, "listId");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andListIdBetween(Integer value1, Integer value2) {
            addCriterion("list_id between", value1, value2, "listId");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andListIdNotBetween(Integer value1, Integer value2) {
            addCriterion("list_id not between", value1, value2, "listId");
            return (Criteria) this;
        }

        protected void addCriterionIgnoreNull(String condition, Object value, String property) {
            if (value != null) {
                if (value instanceof String) {
                    if (((String) value).length() > 0) {
                        criteria.add(new Criterion(condition, value));
                    }
                } else if (value instanceof List<?>) {
                    if(((List<?>) value).size()>0){
                        criteria.add(new Criterion(condition, value));
                    }
                } else {
                    criteria.add(new Criterion(condition, value));
                }
            }
        }

        public Criteria andIdEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andPointEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("point =", value, "point");
            return (Criteria) this;
        }

        public Criteria andProjectIdEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id =", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andOptionIdEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("option_id =", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andListIdEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("list_id =", value, "listId");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andPointNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("point <>", value, "point");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id <>", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andOptionIdNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("option_id <>", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andListIdNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("list_id <>", value, "listId");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andPointGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("point >", value, "point");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id >", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andOptionIdGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("option_id >", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andListIdGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("list_id >", value, "listId");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andPointGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("point >=", value, "point");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id >=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andOptionIdGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("option_id >=", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andListIdGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("list_id >=", value, "listId");
            return (Criteria) this;
        }

        public Criteria andIdLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andPointLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("point <", value, "point");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id <", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andOptionIdLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("option_id <", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andListIdLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("list_id <", value, "listId");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andPointLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("point <=", value, "point");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id <=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andOptionIdLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("option_id <=", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andListIdLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("list_id <=", value, "listId");
            return (Criteria) this;
        }

        public Criteria andIdInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("id in", value, "id");
            return (Criteria) this;
        }

        public Criteria andPointInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("point in", value, "point");
            return (Criteria) this;
        }

        public Criteria andProjectIdInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("project_id in", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andOptionIdInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("option_id in", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andListIdInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("list_id in", value, "listId");
            return (Criteria) this;
        }

        public Criteria andIdNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("id not in", value, "id");
            return (Criteria) this;
        }

        public Criteria andPointNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("point not in", value, "point");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("project_id not in", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andOptionIdNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("option_id not in", value, "optionId");
            return (Criteria) this;
        }

        public Criteria andListIdNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("list_id not in", value, "listId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assess_content_detail
     *
     * @mbggenerated do_not_delete_during_merge Wed Mar 23 14:42:45 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }

        public Criteria andPointLikeInsensitive(String value) {
            addCriterion("upper(point) like", value.toUpperCase(), "point");
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assess_content_detail
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}