package com.redfinger.manager.common.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ResPhoneExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public ResPhoneExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andPhoneIsNull() {
			addCriterion("phone is null");
			return (Criteria) this;
		}

		public Criteria andPhoneIsNotNull() {
			addCriterion("phone is not null");
			return (Criteria) this;
		}

		public Criteria andPhoneEqualTo(String value) {
			addCriterion("phone =", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotEqualTo(String value) {
			addCriterion("phone <>", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThan(String value) {
			addCriterion("phone >", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThanOrEqualTo(String value) {
			addCriterion("phone >=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThan(String value) {
			addCriterion("phone <", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThanOrEqualTo(String value) {
			addCriterion("phone <=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLike(String value) {
			addCriterion("phone like", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotLike(String value) {
			addCriterion("phone not like", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneIn(List<String> values) {
			addCriterion("phone in", values, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotIn(List<String> values) {
			addCriterion("phone not in", values, "phone");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andPhoneBetween(String value1, String value2) {
			addCriterion("phone between", value1, value2, "phone");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andPhoneNotBetween(String value1, String value2) {
			addCriterion("phone not between", value1, value2, "phone");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("create_time =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("create_time <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("create_time >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("create_time >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("create_time <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("create_time <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterion("create_time in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterion("create_time not in", values, "createTime");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("create_time not between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCityIsNull() {
			addCriterion("city is null");
			return (Criteria) this;
		}

		public Criteria andCityIsNotNull() {
			addCriterion("city is not null");
			return (Criteria) this;
		}

		public Criteria andCityEqualTo(String value) {
			addCriterion("city =", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityNotEqualTo(String value) {
			addCriterion("city <>", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityGreaterThan(String value) {
			addCriterion("city >", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityGreaterThanOrEqualTo(String value) {
			addCriterion("city >=", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityLessThan(String value) {
			addCriterion("city <", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityLessThanOrEqualTo(String value) {
			addCriterion("city <=", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityLike(String value) {
			addCriterion("city like", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityNotLike(String value) {
			addCriterion("city not like", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityIn(List<String> values) {
			addCriterion("city in", values, "city");
			return (Criteria) this;
		}

		public Criteria andCityNotIn(List<String> values) {
			addCriterion("city not in", values, "city");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andCityBetween(String value1, String value2) {
			addCriterion("city between", value1, value2, "city");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andCityNotBetween(String value1, String value2) {
			addCriterion("city not between", value1, value2, "city");
			return (Criteria) this;
		}

		public Criteria andIspIsNull() {
			addCriterion("isp is null");
			return (Criteria) this;
		}

		public Criteria andIspIsNotNull() {
			addCriterion("isp is not null");
			return (Criteria) this;
		}

		public Criteria andIspEqualTo(String value) {
			addCriterion("isp =", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspNotEqualTo(String value) {
			addCriterion("isp <>", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspGreaterThan(String value) {
			addCriterion("isp >", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspGreaterThanOrEqualTo(String value) {
			addCriterion("isp >=", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspLessThan(String value) {
			addCriterion("isp <", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspLessThanOrEqualTo(String value) {
			addCriterion("isp <=", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspLike(String value) {
			addCriterion("isp like", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspNotLike(String value) {
			addCriterion("isp not like", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspIn(List<String> values) {
			addCriterion("isp in", values, "isp");
			return (Criteria) this;
		}

		public Criteria andIspNotIn(List<String> values) {
			addCriterion("isp not in", values, "isp");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andIspBetween(String value1, String value2) {
			addCriterion("isp between", value1, value2, "isp");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andIspNotBetween(String value1, String value2) {
			addCriterion("isp not between", value1, value2, "isp");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("remark is null");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("remark is not null");
			return (Criteria) this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("remark =", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("remark <>", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("remark >", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("remark >=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("remark <", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("remark <=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("remark like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("remark not like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkIn(List<String> values) {
			addCriterion("remark in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotIn(List<String> values) {
			addCriterion("remark not in", values, "remark");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("remark between", value1, value2, "remark");
			return (Criteria) this;
		}

		@SuppressWarnings("unused")
		private Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("remark not between", value1, value2, "remark");
			return (Criteria) this;
		}

		protected void addCriterionIgnoreNull(String condition, Object value, String property) {
			if (value != null) {
				if (value instanceof String) {
					if (((String) value).length() > 0) {
						criteria.add(new Criterion(condition, value));
					}
				} else if (value instanceof List<?>) {
					if (((List<?>) value).size() > 0) {
						criteria.add(new Criterion(condition, value));
					}
				} else {
					criteria.add(new Criterion(condition, value));
				}
			}
		}

		public Criteria andPhoneEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("phone =", value, "phone");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualToIgnoreNull(Date value) {
			addCriterionIgnoreNull("create_time =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCityEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("city =", value, "city");
			return (Criteria) this;
		}

		public Criteria andIspEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("isp =", value, "isp");
			return (Criteria) this;
		}

		public Criteria andRemarkEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("remark =", value, "remark");
			return (Criteria) this;
		}

		public Criteria andPhoneNotEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("phone <>", value, "phone");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualToIgnoreNull(Date value) {
			addCriterionIgnoreNull("create_time <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCityNotEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("city <>", value, "city");
			return (Criteria) this;
		}

		public Criteria andIspNotEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("isp <>", value, "isp");
			return (Criteria) this;
		}

		public Criteria andRemarkNotEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("remark <>", value, "remark");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThanIgnoreNull(String value) {
			addCriterionIgnoreNull("phone >", value, "phone");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanIgnoreNull(Date value) {
			addCriterionIgnoreNull("create_time >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCityGreaterThanIgnoreNull(String value) {
			addCriterionIgnoreNull("city >", value, "city");
			return (Criteria) this;
		}

		public Criteria andIspGreaterThanIgnoreNull(String value) {
			addCriterionIgnoreNull("isp >", value, "isp");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThanIgnoreNull(String value) {
			addCriterionIgnoreNull("remark >", value, "remark");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThanOrEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("phone >=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualToIgnoreNull(Date value) {
			addCriterionIgnoreNull("create_time >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCityGreaterThanOrEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("city >=", value, "city");
			return (Criteria) this;
		}

		public Criteria andIspGreaterThanOrEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("isp >=", value, "isp");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThanOrEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("remark >=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThanIgnoreNull(String value) {
			addCriterionIgnoreNull("phone <", value, "phone");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanIgnoreNull(Date value) {
			addCriterionIgnoreNull("create_time <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCityLessThanIgnoreNull(String value) {
			addCriterionIgnoreNull("city <", value, "city");
			return (Criteria) this;
		}

		public Criteria andIspLessThanIgnoreNull(String value) {
			addCriterionIgnoreNull("isp <", value, "isp");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThanIgnoreNull(String value) {
			addCriterionIgnoreNull("remark <", value, "remark");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThanOrEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("phone <=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualToIgnoreNull(Date value) {
			addCriterionIgnoreNull("create_time <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCityLessThanOrEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("city <=", value, "city");
			return (Criteria) this;
		}

		public Criteria andIspLessThanOrEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("isp <=", value, "isp");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThanOrEqualToIgnoreNull(String value) {
			addCriterionIgnoreNull("remark <=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andPhoneInIgnoreNull(List<String> value) {
			addCriterionIgnoreNull("phone in", value, "phone");
			return (Criteria) this;
		}

		public Criteria andCreateTimeInIgnoreNull(List<Date> value) {
			addCriterionIgnoreNull("create_time in", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCityInIgnoreNull(List<String> value) {
			addCriterionIgnoreNull("city in", value, "city");
			return (Criteria) this;
		}

		public Criteria andIspInIgnoreNull(List<String> value) {
			addCriterionIgnoreNull("isp in", value, "isp");
			return (Criteria) this;
		}

		public Criteria andRemarkInIgnoreNull(List<String> value) {
			addCriterionIgnoreNull("remark in", value, "remark");
			return (Criteria) this;
		}

		public Criteria andPhoneNotInIgnoreNull(List<String> value) {
			addCriterionIgnoreNull("phone not in", value, "phone");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotInIgnoreNull(List<Date> value) {
			addCriterionIgnoreNull("create_time not in", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCityNotInIgnoreNull(List<String> value) {
			addCriterionIgnoreNull("city not in", value, "city");
			return (Criteria) this;
		}

		public Criteria andIspNotInIgnoreNull(List<String> value) {
			addCriterionIgnoreNull("isp not in", value, "isp");
			return (Criteria) this;
		}

		public Criteria andRemarkNotInIgnoreNull(List<String> value) {
			addCriterionIgnoreNull("remark not in", value, "remark");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table res_phone
	 * @mbggenerated  Mon Dec 21 11:12:38 CST 2015
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table res_phone
     *
     * @mbggenerated do_not_delete_during_merge Thu Dec 10 14:53:35 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }

        public Criteria andPhoneLikeInsensitive(String value) {
            addCriterion("upper(phone) like", value.toUpperCase(), "phone");
            return this;
        }

        public Criteria andCityLikeInsensitive(String value) {
            addCriterion("upper(city) like", value.toUpperCase(), "city");
            return this;
        }

        public Criteria andIspLikeInsensitive(String value) {
            addCriterion("upper(isp) like", value.toUpperCase(), "isp");
            return this;
        }

        public Criteria andRemarkLikeInsensitive(String value) {
            addCriterion("upper(remark) like", value.toUpperCase(), "remark");
            return this;
        }
    }
}