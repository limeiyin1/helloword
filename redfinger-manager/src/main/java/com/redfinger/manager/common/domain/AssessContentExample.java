package com.redfinger.manager.common.domain;

import java.util.ArrayList;
import java.util.List;

public class AssessContentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public AssessContentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andAssessPointIsNull() {
            addCriterion("assess_point is null");
            return (Criteria) this;
        }

        public Criteria andAssessPointIsNotNull() {
            addCriterion("assess_point is not null");
            return (Criteria) this;
        }

        public Criteria andAssessPointEqualTo(String value) {
            addCriterion("assess_point =", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andAssessPointNotEqualTo(String value) {
            addCriterion("assess_point <>", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andAssessPointGreaterThan(String value) {
            addCriterion("assess_point >", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andAssessPointGreaterThanOrEqualTo(String value) {
            addCriterion("assess_point >=", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andAssessPointLessThan(String value) {
            addCriterion("assess_point <", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andAssessPointLessThanOrEqualTo(String value) {
            addCriterion("assess_point <=", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andAssessPointLike(String value) {
            addCriterion("assess_point like", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andAssessPointNotLike(String value) {
            addCriterion("assess_point not like", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andAssessPointIn(List<String> values) {
            addCriterion("assess_point in", values, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andAssessPointNotIn(List<String> values) {
            addCriterion("assess_point not in", values, "assessPoint");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andAssessPointBetween(String value1, String value2) {
            addCriterion("assess_point between", value1, value2, "assessPoint");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andAssessPointNotBetween(String value1, String value2) {
            addCriterion("assess_point not between", value1, value2, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointIsNull() {
            addCriterion("other_point is null");
            return (Criteria) this;
        }

        public Criteria andOtherPointIsNotNull() {
            addCriterion("other_point is not null");
            return (Criteria) this;
        }

        public Criteria andOtherPointEqualTo(String value) {
            addCriterion("other_point =", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointNotEqualTo(String value) {
            addCriterion("other_point <>", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointGreaterThan(String value) {
            addCriterion("other_point >", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointGreaterThanOrEqualTo(String value) {
            addCriterion("other_point >=", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointLessThan(String value) {
            addCriterion("other_point <", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointLessThanOrEqualTo(String value) {
            addCriterion("other_point <=", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointLike(String value) {
            addCriterion("other_point like", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointNotLike(String value) {
            addCriterion("other_point not like", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointIn(List<String> values) {
            addCriterion("other_point in", values, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointNotIn(List<String> values) {
            addCriterion("other_point not in", values, "otherPoint");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andOtherPointBetween(String value1, String value2) {
            addCriterion("other_point between", value1, value2, "otherPoint");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andOtherPointNotBetween(String value1, String value2) {
            addCriterion("other_point not between", value1, value2, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andTargetAdminIsNull() {
            addCriterion("target_admin is null");
            return (Criteria) this;
        }

        public Criteria andTargetAdminIsNotNull() {
            addCriterion("target_admin is not null");
            return (Criteria) this;
        }

        public Criteria andTargetAdminEqualTo(String value) {
            addCriterion("target_admin =", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminNotEqualTo(String value) {
            addCriterion("target_admin <>", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminGreaterThan(String value) {
            addCriterion("target_admin >", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminGreaterThanOrEqualTo(String value) {
            addCriterion("target_admin >=", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminLessThan(String value) {
            addCriterion("target_admin <", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminLessThanOrEqualTo(String value) {
            addCriterion("target_admin <=", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminLike(String value) {
            addCriterion("target_admin like", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminNotLike(String value) {
            addCriterion("target_admin not like", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminIn(List<String> values) {
            addCriterion("target_admin in", values, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andTargetAdminNotIn(List<String> values) {
            addCriterion("target_admin not in", values, "targetAdmin");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andTargetAdminBetween(String value1, String value2) {
            addCriterion("target_admin between", value1, value2, "targetAdmin");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andTargetAdminNotBetween(String value1, String value2) {
            addCriterion("target_admin not between", value1, value2, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdIsNull() {
            addCriterion("project_id is null");
            return (Criteria) this;
        }

        public Criteria andProjectIdIsNotNull() {
            addCriterion("project_id is not null");
            return (Criteria) this;
        }

        public Criteria andProjectIdEqualTo(Integer value) {
            addCriterion("project_id =", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotEqualTo(Integer value) {
            addCriterion("project_id <>", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThan(Integer value) {
            addCriterion("project_id >", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("project_id >=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThan(Integer value) {
            addCriterion("project_id <", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanOrEqualTo(Integer value) {
            addCriterion("project_id <=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdIn(List<Integer> values) {
            addCriterion("project_id in", values, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotIn(List<Integer> values) {
            addCriterion("project_id not in", values, "projectId");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andProjectIdBetween(Integer value1, Integer value2) {
            addCriterion("project_id between", value1, value2, "projectId");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andProjectIdNotBetween(Integer value1, Integer value2) {
            addCriterion("project_id not between", value1, value2, "projectId");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumIsNull() {
            addCriterion("need_assess_num is null");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumIsNotNull() {
            addCriterion("need_assess_num is not null");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumEqualTo(Integer value) {
            addCriterion("need_assess_num =", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumNotEqualTo(Integer value) {
            addCriterion("need_assess_num <>", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumGreaterThan(Integer value) {
            addCriterion("need_assess_num >", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("need_assess_num >=", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumLessThan(Integer value) {
            addCriterion("need_assess_num <", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumLessThanOrEqualTo(Integer value) {
            addCriterion("need_assess_num <=", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumIn(List<Integer> values) {
            addCriterion("need_assess_num in", values, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumNotIn(List<Integer> values) {
            addCriterion("need_assess_num not in", values, "needAssessNum");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andNeedAssessNumBetween(Integer value1, Integer value2) {
            addCriterion("need_assess_num between", value1, value2, "needAssessNum");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andNeedAssessNumNotBetween(Integer value1, Integer value2) {
            addCriterion("need_assess_num not between", value1, value2, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumIsNull() {
            addCriterion("aleady_assess_num is null");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumIsNotNull() {
            addCriterion("aleady_assess_num is not null");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumEqualTo(Integer value) {
            addCriterion("aleady_assess_num =", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumNotEqualTo(Integer value) {
            addCriterion("aleady_assess_num <>", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumGreaterThan(Integer value) {
            addCriterion("aleady_assess_num >", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("aleady_assess_num >=", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumLessThan(Integer value) {
            addCriterion("aleady_assess_num <", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumLessThanOrEqualTo(Integer value) {
            addCriterion("aleady_assess_num <=", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumIn(List<Integer> values) {
            addCriterion("aleady_assess_num in", values, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumNotIn(List<Integer> values) {
            addCriterion("aleady_assess_num not in", values, "aleadyAssessNum");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andAleadyAssessNumBetween(Integer value1, Integer value2) {
            addCriterion("aleady_assess_num between", value1, value2, "aleadyAssessNum");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andAleadyAssessNumNotBetween(Integer value1, Integer value2) {
            addCriterion("aleady_assess_num not between", value1, value2, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andProjectNameIsNull() {
            addCriterion("project_name is null");
            return (Criteria) this;
        }

        public Criteria andProjectNameIsNotNull() {
            addCriterion("project_name is not null");
            return (Criteria) this;
        }

        public Criteria andProjectNameEqualTo(String value) {
            addCriterion("project_name =", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotEqualTo(String value) {
            addCriterion("project_name <>", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThan(String value) {
            addCriterion("project_name >", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThanOrEqualTo(String value) {
            addCriterion("project_name >=", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThan(String value) {
            addCriterion("project_name <", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThanOrEqualTo(String value) {
            addCriterion("project_name <=", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLike(String value) {
            addCriterion("project_name like", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotLike(String value) {
            addCriterion("project_name not like", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameIn(List<String> values) {
            addCriterion("project_name in", values, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotIn(List<String> values) {
            addCriterion("project_name not in", values, "projectName");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andProjectNameBetween(String value1, String value2) {
            addCriterion("project_name between", value1, value2, "projectName");
            return (Criteria) this;
        }

        @SuppressWarnings("unused")
        private Criteria andProjectNameNotBetween(String value1, String value2) {
            addCriterion("project_name not between", value1, value2, "projectName");
            return (Criteria) this;
        }

        protected void addCriterionIgnoreNull(String condition, Object value, String property) {
            if (value != null) {
                if (value instanceof String) {
                    if (((String) value).length() > 0) {
                        criteria.add(new Criterion(condition, value));
                    }
                } else if (value instanceof List<?>) {
                    if(((List<?>) value).size()>0){
                        criteria.add(new Criterion(condition, value));
                    }
                } else {
                    criteria.add(new Criterion(condition, value));
                }
            }
        }

        public Criteria andIdEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andAssessPointEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_point =", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("other_point =", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andTargetAdminEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("target_admin =", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id =", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("need_assess_num =", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("aleady_assess_num =", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andProjectNameEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("project_name =", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andAssessPointNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_point <>", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("other_point <>", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andTargetAdminNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("target_admin <>", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id <>", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("need_assess_num <>", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumNotEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("aleady_assess_num <>", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("project_name <>", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andAssessPointGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_point >", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("other_point >", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andTargetAdminGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("target_admin >", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id >", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("need_assess_num >", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumGreaterThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("aleady_assess_num >", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThanIgnoreNull(String value) {
            addCriterionIgnoreNull("project_name >", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andAssessPointGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_point >=", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("other_point >=", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andTargetAdminGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("target_admin >=", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id >=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("need_assess_num >=", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumGreaterThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("aleady_assess_num >=", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("project_name >=", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andIdLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andAssessPointLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_point <", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("other_point <", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andTargetAdminLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("target_admin <", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id <", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("need_assess_num <", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumLessThanIgnoreNull(Integer value) {
            addCriterionIgnoreNull("aleady_assess_num <", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThanIgnoreNull(String value) {
            addCriterionIgnoreNull("project_name <", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andAssessPointLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("assess_point <=", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("other_point <=", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andTargetAdminLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("target_admin <=", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("project_id <=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("need_assess_num <=", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumLessThanOrEqualToIgnoreNull(Integer value) {
            addCriterionIgnoreNull("aleady_assess_num <=", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThanOrEqualToIgnoreNull(String value) {
            addCriterionIgnoreNull("project_name <=", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andIdInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("id in", value, "id");
            return (Criteria) this;
        }

        public Criteria andAssessPointInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("assess_point in", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("other_point in", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andTargetAdminInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("target_admin in", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("project_id in", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("need_assess_num in", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("aleady_assess_num in", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andProjectNameInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("project_name in", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andIdNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("id not in", value, "id");
            return (Criteria) this;
        }

        public Criteria andAssessPointNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("assess_point not in", value, "assessPoint");
            return (Criteria) this;
        }

        public Criteria andOtherPointNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("other_point not in", value, "otherPoint");
            return (Criteria) this;
        }

        public Criteria andTargetAdminNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("target_admin not in", value, "targetAdmin");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("project_id not in", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andNeedAssessNumNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("need_assess_num not in", value, "needAssessNum");
            return (Criteria) this;
        }

        public Criteria andAleadyAssessNumNotInIgnoreNull(List<Integer> value) {
            addCriterionIgnoreNull("aleady_assess_num not in", value, "aleadyAssessNum");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotInIgnoreNull(List<String> value) {
            addCriterionIgnoreNull("project_name not in", value, "projectName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assess_content
     *
     * @mbggenerated do_not_delete_during_merge Wed Mar 23 14:42:45 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }

        public Criteria andAssessPointLikeInsensitive(String value) {
            addCriterion("upper(assess_point) like", value.toUpperCase(), "assessPoint");
            return this;
        }

        public Criteria andOtherPointLikeInsensitive(String value) {
            addCriterion("upper(other_point) like", value.toUpperCase(), "otherPoint");
            return this;
        }

        public Criteria andTargetAdminLikeInsensitive(String value) {
            addCriterion("upper(target_admin) like", value.toUpperCase(), "targetAdmin");
            return this;
        }

        public Criteria andProjectNameLikeInsensitive(String value) {
            addCriterion("upper(project_name) like", value.toUpperCase(), "projectName");
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assess_content
     *
     * @mbggenerated Wed Mar 23 14:42:45 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}